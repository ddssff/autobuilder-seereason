--- old/src/Compiler/Info.hs	2014-06-19 10:47:09.715550937 -0700
+++ new/src/Compiler/Info.hs	2014-06-19 11:31:23.975625075 -0700
@@ -31,7 +31,7 @@
 [_$_]
 getGlobalPackageBase :: IO FilePath
 getGlobalPackageBase = do
-  appdir <- getAppUserDataDirectory "ghcjs"
+  appdir <- return "/homedoesnotexistatbuildtime/.ghcjs" -- getAppUserDataDirectory "ghcjs"
   return (appdir </> subdir)
       where
         targetARCH = arch
diff -ru old/src-bin/Boot.hs new/src-bin/Boot.hs
--- old/src-bin/Boot.hs	2014-06-19 10:47:09.715550937 -0700
+++ new/src-bin/Boot.hs	2014-06-19 11:53:08.851661523 -0700
@@ -6,7 +6,7 @@
 import Prelude hiding (FilePath)
 import Shelly
 import qualified GHC.Paths as Paths
-import Data.Text (Text)
+import Data.Text (Text, pack)
 import qualified Data.Text as T
 import Data.Monoid
 import Data.Maybe
@@ -15,6 +15,7 @@
 import Control.Monad
 import Options.Applicative
 import qualified Control.Exception as Ex
+import System.Environment (setEnv)
 import System.Exit (exitSuccess, exitFailure)
 import Filesystem.Path hiding ((<.>), (</>), null)
 [_$_]
@@ -30,6 +31,7 @@
 default (Text)
 [_$_]
 main = do
+    setEnv "HOME" "/homedoesnotexistatbuildtime"
     settings <- adjustDefaultSettings <$> execParser optParser'
     when (showVersion settings) (printVersion >> exitSuccess)
     r <- (shelly $ actions settings `catchany_sh` (return . Just))
@@ -437,6 +439,8 @@
       incNative = lib  </> "include_native"
       rtsLib    = lib  </> "rts-1.0"
   rtsConf <- readfile (Paths.libdir </> "package.conf.d" </> "builtin_rts.conf")
+  echo $ pack ("installRts - writeFile " <> show (dest </> "builtin_rts.conf"))
+  mkdir_p (fromString dest)
   writefile (dest </> "builtin_rts.conf") $
                  fixRtsConf (toTextIgnore inc) (toTextIgnore rtsLib) rtsConf
   ghcjs_pkg' ["recache", "--global"]
