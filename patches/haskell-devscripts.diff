--- old/Dh_Haskell.sh	2016-12-11 16:48:06.000000000 -0800
+++ new/Dh_Haskell.sh	2017-01-23 13:56:39.054461622 -0800
@@ -107,7 +107,7 @@
 }
 
 strip_hash(){
-    echo "$1" | sed 's/-................................$//'
+    echo "$1" | sed 's/-[^-]*$//'
 }
 
 sort_uniq(){
@@ -142,19 +142,28 @@
     local dirs
     local lib
     local hc
-    local ghcversion=`dpkg-query --showformat '${Version}' --show ghc`
     hc=$1
-    if dpkg --compare-versions "${ghcversion}" '>=' 8
-    then
-        dep=$2
-    else
-        dep=`strip-hash $2`
-    fi
+    local ghcversion=`dpkg-query --showformat '${Version}' --show ${hc}`
+    case ${hc} in
+	ghcjs)
+          dep=`strip_hash $2`
+	  ext=".js_a"
+	  ;;
+        ghc)
+	  if dpkg --compare-versions "${ghcversion}" '>=' 8
+	  then
+              dep=$2
+	  else
+              dep=`strip_hash $2`
+	  fi
+	  ext=".a"
+	  ;;
+    esac
     dirs=`ghc_pkg_field $hc $dep library-dirs | grep -i ^library-dirs | cut -d':' -f 2`
     lib=`ghc_pkg_field $hc $dep hs-libraries | grep -i ^hs-libraries |  sed -e 's|hs-libraries: *\([^ ]*\).*|\1|' `
     for dir in $dirs ; do
-        if [ -e "${dir}/lib${lib}.a" ] ; then
-            package=`dpkg-query -S ${dir}/lib${lib}.a | cut -d':' -f 1` || exit $?
+        if [ -e "${dir}/lib${lib}${ext}" ] ; then
+            package=`dpkg-query -S ${dir}/lib${lib}${ext} | cut -d':' -f 1` || exit $?
             continue
         fi
     done
@@ -168,13 +177,14 @@
     local dirs
     local lib
     local hc
-    local ghcversion=`dpkg-query --showformat '${Version}' --show ghc`
+    local ghcversion=`dpkg-query --showformat '${version}' --show ghc`
     hc=$1
+    # No prof packages for ghcjs
     if dpkg --compare-versions "${ghcversion}" '>=' 8
     then
         dep=$2
     else
-        dep=`strip-hash $2`
+        dep=`strip_hash $2`
     fi
     dirs=`ghc_pkg_field $hc $dep library-dirs | grep -i ^library-dirs | cut -d':' -f 2`
     lib=`ghc_pkg_field $hc $dep hs-libraries | grep -i ^hs-libraries | sed -e 's|hs-libraries: *\([^ ]*\).*|\1|' `
@@ -231,7 +241,7 @@
     hc=$1
     type=$2
     pkgid=$3
-    ghcpkg="`usable_ghc_pkg`"
+    ghcpkg="`usable_ghc_pkg ${hc}`"
     virtual_pkg=`package_id_to_virtual_package "${hc}" "$type" $pkgid "${ghcpkg}"`
     # As a transition measure, check if dpkg knows about this virtual package
     if dpkg-query -W $virtual_pkg >/dev/null 2>/dev/null;
@@ -295,15 +305,17 @@
 }
 
 usable_ghc_pkg() {
+    local hc
     local ghcpkg
     local version
+    hc=$1
     if [ -x inplace/bin/ghc-pkg ]
     then
         # We are building ghc and need to use the new ghc-pkg
         ghcpkg="inplace/bin/ghc-pkg"
         version="`dpkg-parsechangelog -S Version`"
     else
-        ghcpkg="ghc-pkg"
+        ghcpkg="${hc}-pkg"
         version="`dpkg-query --showformat '${Version}' --show ghc`"
     fi
     # ghc-pkg prior to version 8 is unusable for our purposes.
@@ -314,8 +326,11 @@
 }
 
 tmp_package_db() {
+    local hc
+    hc=$1
+    shift
     local ghcpkg
-    ghcpkg="`usable_ghc_pkg`"
+    ghcpkg="`usable_ghc_pkg ${hc}`"
     if [ -n "${ghcpkg}" ]
     then
         if [ ! -f debian/tmp-db/package.cache ]
@@ -332,8 +347,6 @@
     local hc
     local dep
     local packages
-    hc=$1
-    shift
     ghcpkg="`tmp_package_db $@`"
     for package_id in `cabal_package_ids $@` ; do
         packages="$packages, `package_id_to_virtual_package "${hc}" dev $package_id "${ghcpkg}"`"
@@ -347,7 +360,7 @@
     local packages
     hc=$1
     shift
-    ghcpkg="`tmp_package_db $@`"
+    ghcpkg="`tmp_package_db ${hc} $@`"
     for package_id in `cabal_package_ids $@` ; do
         packages="$packages, `package_id_to_virtual_package "${hc}" prof $package_id "${ghcpkg}"`"
     done
@@ -443,7 +443,7 @@ configure_recipe(){
     # local PS5=$PS4; PS4=" + configure_recipe> "; set -x
     hc=`packages_hc`
 
-    ENABLE_PROFILING=`{ for i in ${DEB_PACKAGES}; do package_ext $i | grep prof; done; } | LC_ALL=C sort -u | sed 's/prof/--enable-library-profiling/'`
+    ENABLE_PROFILING=`{ for i in ${DEB_PACKAGES}; do package_ext $i | grep prof; done; } | LC_ALL=C sort -u | sed 's/prof/--enable-library-profiling --enable-profiling --disable-executable-dynamic/'`
     local GHC_OPTIONS
     for i in `dpkg-buildflags --get LDFLAGS`
     do
@@ -483,7 +483,7 @@
 check_recipe(){
     # local PS5=$PS4; PS4=" + check_recipe> "; set -x
     hc=`packages_hc`
-    run ${DEB_SETUP_BIN_NAME} test --builddir=dist-${hc} --show-details=direct
+    run ${DEB_SETUP_BIN_NAME} test --builddir=dist-${hc} --show-details=always
     # PS4=$PS5
 }
 
