--- old/mastermind.cabal	2012-11-26 12:11:40.277002455 -0800
+++ new/mastermind.cabal	2012-11-26 12:11:32.241002885 -0800
@@ -22,10 +22,10 @@
                      acid-state       == 0.8.*,
                      aeson            == 0.6.*,
                      containers       == 0.4.*,
-                     fay              == 0.9.*,
+                     fay              >= 0.9,
                      fay-jquery       == 0.1.*,
                      happstack-fay    == 0.1.*,
                      happstack-server == 7.0.*,
                      mtl              >= 2.0 && < 2.2,
                      random           == 1.0.*,
-                     safecopy         == 0.7.*
+                     safecopy         >= 0.7 
--- old/Setup.hs	2012-11-26 11:17:28.000000000 -0800
+++ new/Setup.hs	2012-11-26 19:33:40.367586489 -0800
@@ -8,6 +8,7 @@
 import Distribution.PackageDescription
 import Paths_fay_jquery    as FayJQuery
 import Paths_happstack_fay as HappstackFay
+import System.FilePath ((</>))
 
 main = defaultMainWithHooks userHooks
 
@@ -26,7 +26,7 @@
     do fayQueryDataDir     <- liftIO $ FayJQuery.getDataDir
        happstackFayDataDir <- liftIO $ HappstackFay.getDataDir
        runDbProgram normal fayProgram (withPrograms localBuildInfo)
-          [ "--include", intercalate "," [fayQueryDataDir, happstackFayDataDir]
+          [ "--include", intercalate "," [fayQueryDataDir </> "src", happstackFayDataDir]
           , "MasterMind/Client/Main.hs"
           ]
        return ()
--- old/MasterMind/Client/Main.hs	2012-11-26 11:17:28.000000000 -0800
+++ new/MasterMind/Client/Main.hs	2012-11-26 19:59:51.999502576 -0800
@@ -12,7 +12,7 @@
 main =
     ready $ do
       submitButton <- select "#guess"
-      click submitGuess submitButton
+      click_ submitGuess submitButton
       pegs <- select ".peg"
       (flip each) pegs (\index pegElem ->
           do peg     <- selectElement pegElem
@@ -21,7 +21,7 @@
              (flip each) buttons $ (\buttonIndex button ->
                do b <- selectElement button
                   color <- getAttr "data-color" b
-                  click (setPegColor peg color) b
+                  click_ (setPegColor peg color) b
                   return True)
              return True)
       call "/ajax" FetchBoard $ \mboard ->
@@ -90,14 +90,14 @@
 
 updateBoard :: Row -> Fay ()
 updateBoard (Row (Guess peg1 peg2 peg3 peg4) (Score score1 score2 score3 score4)) =
-    do html <- tr [] $ [ td [return ("class", "peg")] [span [return ("class", pegColor peg1)] []]
-                       , td [return ("class", "peg")] [span [return ("class", pegColor peg2)] []]
-                       , td [return ("class", "peg")] [span [return ("class", pegColor peg3)] []]
-                       , td [return ("class", "peg")] [span [return ("class", pegColor peg4)] []]
-                       , td [return ("class", "peg")] [span [return ("class", scoreColor score1)] []]
-                       , td [return ("class", "peg")] [span [return ("class", scoreColor score2)] []]
-                       , td [return ("class", "peg")] [span [return ("class", scoreColor score3)] []]
-                       , td [return ("class", "peg")] [span [return ("class", scoreColor score4)] []]
+    do html <- tr [] $ [ td [return ("class", "peg")] [genElement "span" [return ("class", pegColor peg1)] []]
+                       , td [return ("class", "peg")] [genElement "span" [return ("class", pegColor peg2)] []]
+                       , td [return ("class", "peg")] [genElement "span" [return ("class", pegColor peg3)] []]
+                       , td [return ("class", "peg")] [genElement "span" [return ("class", pegColor peg4)] []]
+                       , td [return ("class", "peg")] [genElement "span" [return ("class", scoreColor score1)] []]
+                       , td [return ("class", "peg")] [genElement "span" [return ("class", scoreColor score2)] []]
+                       , td [return ("class", "peg")] [genElement "span" [return ("class", scoreColor score3)] []]
+                       , td [return ("class", "peg")] [genElement "span" [return ("class", scoreColor score4)] []]
                        ]
        jq <- renderHTML html
        row0 <- select "#row0"
@@ -125,7 +125,7 @@
 
 mkClick :: JQuery -> Fay JQuery
 mkClick jq =
-    click (alert "you clicked it") jq
+    click_ (alert "you clicked it") jq
 
 
 modal :: JQuery -> Fay ()
@@ -134,13 +134,13 @@
 ignore :: () -> Fay ()
 ignore _ = return ()
 
-data Placement = Top | Bottom | Left | Right
+data Placement = Top | Bottom | Left_ | Right_
 
 placementStr :: Placement -> String
 placementStr Top    = "top"
 placementStr Bottom = "bottom"
-placementStr Left   = "left"
-placementStr Right  = "right"
+placementStr Left_  = "left"
+placementStr Right_ = "right"
 
 data Trigger = Click | Hover | Focus | Manual
 
@@ -166,7 +166,7 @@
 popoverOptions = PopoverOptions
     { popoverAnimation = True
     , popoverHtml      = True
-    , popoverPlacement = Right
+    , popoverPlacement = Right_
     , popoverSelector  = False
     , popoverTrigger   = Click
     , popoverTitle     = ""
@@ -181,8 +181,8 @@
 popover_ :: JQuery -> Bool -> Bool -> String -> Bool -> String -> String -> (() -> Fay String) -> Int -> Fay JQuery
 popover_ = ffi "%1.popover({animation: %2, html : %3, placement : %4, selector : %5, trigger : %6, title : %7, content : %8, delay : %9})"
 
-click :: Fay () -> JQuery -> Fay JQuery
-click = ffi "%2.click(%1)"
+click_ :: Fay () -> JQuery -> Fay JQuery
+click_ = ffi "%2.click(%1)"
 
 alert :: String -> Fay ()
 alert = ffi "window.alert(%1)"
