--- old/testpack.cabal	2013-02-25 10:43:43.000000000 -0800
+++ new/testpack.cabal	2013-02-25 11:04:01.527148441 -0800
@@ -39,7 +39,7 @@
 
  Build-Depends: base >= 3 && < 5,
                mtl, HUnit,
-               QuickCheck >= 2.1.0.3 && < 2.5
+               QuickCheck >= 2.1.0.3
 
  If flag(splitBase)
    Build-Depends: base >= 3 && < 5, containers, random
--- old/src/Test/HUnit/Tools.hs	2012-10-05 04:45:37.000000000 -0700
+++ new/src/Test/HUnit/Tools.hs	2012-10-05 05:02:50.779290231 -0700
@@ -99,7 +99,7 @@
 tests :: Args -> Gen Result -> StdGen -> Int -> Int -> [[String]] -> IO ()
 tests config gen rnd0 ntest nfail stamps
   | ntest == maxSuccess config = return ()
-  | nfail == maxDiscard config = assertFailure $ "Arguments exhausted after " ++ show ntest ++ " tests."
+  | nfail == maxDiscardRatio config = assertFailure $ "Arguments exhausted after " ++ show ntest ++ " tests."
   | otherwise               =
       do putStr (configEvery config ntest (arguments result))
          case ok result of
@@ -128,7 +128,7 @@
 >        q "Integer -> Int (safe bounds)" prop_integer_to_int_pass]
 -}
 qc2hu :: QC.Testable a => Int -> String -> a -> HU.Test
-qc2hu maxTest = qccheck (stdArgs {maxSuccess = maxTest, maxDiscard = 20000})
+qc2hu maxTest = qccheck (stdArgs {maxSuccess = maxTest, maxDiscardRatio = 20000})
 
 {- | Run verbose tests.  Example:
 
@@ -165,7 +165,7 @@
 localquickCheckWithResult args p =
   do 
 #if MIN_VERSION_QuickCheck(2,3,0)
-     tm  <- if chatty args then newStdioTerminal else newNullTerminal
+     tm  <- if chatty args then withStdioTerminal else withNullTerminal
 #else
      tm  <- newTerminal
 #endif
@@ -174,7 +174,7 @@
               Just (rnd,_) -> return rnd
      test MkState{ terminal          = tm
                  , maxSuccessTests   = maxSuccess args
-                 , maxDiscardedTests = maxDiscard args
+                 , maxDiscardedTests = maxDiscardRatio args
                  , computeSize       = case replay args of
                                          Nothing    -> 
 d -> (n * maxSize args)
                                                          `div` maxSuccess args
--- old/src/Test/QuickCheck/Tools.hs	2013-03-12 21:20:09.000000000 -0700
+++ new/src/Test/QuickCheck/Tools.hs	2013-03-13 08:22:01.081837218 -0700
@@ -23,7 +23,7 @@
                               
                              )
 where
-import Test.QuickCheck hiding (Result, reason)
+import Test.QuickCheck hiding (Result, reason, interrupted)
 import Test.QuickCheck.Property
 
 {- | Compare two values.  If same, the test passes.  If different, the result indicates
