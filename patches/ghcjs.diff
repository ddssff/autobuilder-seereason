--- old/ghcjs.cabal	2014-05-30 16:21:00.000000000 -0700
+++ new/ghcjs.cabal	2014-05-30 16:22:58.420419395 -0700
@@ -90,7 +90,7 @@
                    aeson          >= 0.7      && < 0.8,
                    text           >= 0.11     && < 1.2,
                    wl-pprint-text >= 1.1      && < 1.2,
-                   lens           >= 4.0      && < 4.1,
+                   lens           >= 4.0,
                    yaml           >= 0.8      && < 0.9,
                    time,
                    system-filepath,
@@ -106,7 +106,7 @@
                    parallel       >= 3.2      && < 3.3,
                    hashable,
                    unordered-containers,
-                   optparse-applicative       >= 0.7 && < 0.8,
+                   optparse-applicative       >= 0.8,
                    stringsearch               >= 0.3 && < 0.4,
                    -- for JMacro
                    regex-posix                >= 0.90 && < 0.100,
@@ -181,7 +181,7 @@
                       system-filepath      >= 0.4  && < 0.5,
                       shelly               >= 1.5  && < 1.6,
                       system-fileio        >= 0.3  && < 0.4,
-                      optparse-applicative >= 0.7  && < 0.8,
+                      optparse-applicative >= 0.8,
                       tar                  >= 0.4  && < 0.5,
                       zlib                 >= 0.5.4 && < 0.6,
                       bzlib                >= 0.5   && < 0.6,
--- old/src/Compiler/GhcjsProgram.hs.orig	2014-05-30 16:46:00.000000000 -0700
+++ new/src/Compiler/GhcjsProgram.hs	2014-05-30 16:57:23.440487977 -0700
@@ -98,12 +98,14 @@
 getGhcjsSettings :: [Located String] -> IO ([Located String], GhcjsSettings)
 getGhcjsSettings args =
   case p of
-    Left failure -> do
-      hPutStrLn stderr =<< errMessage failure "ghcjs"
-      exitWith (errExitCode failure)
-    Right gs1 -> do
+    Failure failure -> do
+      let (message, code) = execFailure failure "ghcjs"
+      hPutStrLn stderr message
+      exitWith code
+    Success gs1 -> do
       gs2 <- envSettings
       return (args', gs1 <> gs2)
+    CompletionInvoked r -> error "CompletionInvoked - I'm not sure what this is all about"
   where
     (ga,args') = partition (\a -> any (`isPrefixOf` unLoc a) as) args
     p = execParserPure (prefs mempty) optParser' (map unLoc ga)
--- old/src/Compiler/JMacro/Base.hs	2014-05-30 17:19:55.000000000 -0700
+++ new/src/Compiler/JMacro/Base.hs	2014-05-30 17:35:47.724564505 -0700
@@ -177,7 +177,7 @@
       | LeOp            -- <=
       | AddOp           -- +
       | SubOp           -- -
-      | MulOp           -- *
+      | MulOp           -- (this was a star, but it confused haddock)
       | DivOp           -- /
       | ModOp           -- %
       | LeftShiftOp     -- <<
