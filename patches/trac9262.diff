--- old/compiler/typecheck/TcSplice.lhs	2014-07-09 21:27:16.000000000 -0700
+++ new/compiler/typecheck/TcSplice.lhs	2014-12-10 13:34:28.836300617 -0800
@@ -996,13 +996,22 @@
                  <+> ppr_th th_nm <+> sep (map ppr_th th_tys)) $
      do { loc <- getSrcSpanM
         ; rdr_ty <- cvt loc (mkThAppTs (TH.ConT th_nm) th_tys)
-        ; (rn_ty, _fvs) <- checkNoErrs $ rnLHsType doc rdr_ty   -- Rename  to HsType Name
-                         -- checkNoErrs: see Note [Renamer errors]
-        ; (ty, _kind)  <- tcLHsType rn_ty
-        ; ty <- zonkTcTypeToType emptyZonkEnv ty   -- Substitute out the meta type variables
-                                                   -- In particular, the type might have kind
-                                                   -- variables inside it (Trac #7477)
-
+          -- #9262 says to bring vars into scope, like in HsForAllTy case
+          -- of rnHsTyKi
+        ; let (kvs, tvs) = extractHsTyRdrTyVars rdr_ty
+              tv_bndrs   = userHsTyVarBndrs loc tvs
+              hs_tvbs    = mkHsQTvs tv_bndrs
+          -- Rename  to HsType Name
+        ; ((rn_tvbs, rn_ty), _fvs)
+            <- bindHsTyVars doc Nothing kvs hs_tvbs $ \ rn_tvbs ->
+               do { (rn_ty, fvs) <- rnLHsType doc rdr_ty
+                  ; return ((rn_tvbs, rn_ty), fvs) }
+        ; (ty, _kind) <- tcHsTyVarBndrs rn_tvbs $ \ _tvs ->
+                         tcLHsType rn_ty
+        ; ty <- zonkTcTypeToType emptyZonkEnv ty
+                -- Substitute out the meta type variables
+                -- In particular, the type might have kind
+                -- variables inside it (Trac #7477)
         ; traceTc "reifyInstances" (ppr ty $$ ppr (typeKind ty))
         ; case splitTyConApp_maybe ty of   -- This expands any type synonyms
             Just (tc, tys)                 -- See Trac #7910
