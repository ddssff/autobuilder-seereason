--- old/clckwrks-dot-com.cabal	2013-02-05 09:38:46.000000000 -0800
+++ new/clckwrks-dot-com.cabal	2013-02-05 09:46:18.421903299 -0800
@@ -17,7 +17,7 @@
 
 Flag backups
      Description: enable the backups executable (currently disabled by default do to wacky dependencies not on hackage)
-     Default: False
+     Default: True
 
 Executable             clckwrks-dot-com-server
   main-is:             Main.hs
@@ -27,7 +27,7 @@
                        clckwrks-theme-clckwrks  == 0.2.*,
                        clckwrks-plugin-bugs     == 0.3.*,
                        clckwrks-plugin-media    == 0.3.*,
-                       containers               == 0.4.*,
+                       containers               >= 0.4,
                        happstack-server         >= 7.0 && < 7.2,
                        hsp                      == 0.7.*,
                        mtl                      >= 2.0 && < 2.2,
--- old/debian/Debianize.hs	2013-02-08 15:08:22.609455152 -0800
+++ new/debian/Debianize.hs	2013-02-06 18:58:44.705868129 -0800
@@ -1,90 +1,95 @@
-import Data.List (isPrefixOf)
-import Debian.Relation (BinPkgName(..))
-import Distribution.Debian (Flags(..), defaultFlags, Executable(..), Server(..), Site(..), tightDependencyFixup)
-import Distribution.Debian.DebHelper (DebAtom(..))
-import Distribution.Debian.Debianize
-import Distribution.Debian.Server (databaseDirectory)
-import Distribution.Simple
+{-# LANGUAGE OverloadedStrings #-}
+import Data.Lens.Lazy (setL, modL)
+import Data.List as List (map, isPrefixOf, concat, foldr)
+import Data.Maybe (fromMaybe)
+import Data.Set as Set (insert)
+import Data.Text as T
+import Debian.Changes (ChangeLog)
+import Debian.Debianize
+import Debian.Relation (Relation(..), VersionReq(..), SrcPkgName(..), BinPkgName(..))
 import qualified Paths_clckwrks as Clckwrks
+import Text.PrettyPrint.ANSI.Leijen (Pretty, pretty, text)
 
 main :: IO ()
 main =
     do jstreePath <- Clckwrks.getDataFileName "jstree"
        json2Path  <- Clckwrks.getDataFileName "json2"
-       Distribution.Debian.Debianize.debianize $
-         defaultFlags { missingDependencies = ["libghc-clckwrks-theme-clckwrks-doc"]
-                      , executablePackages  = map (theSite jstreePath json2Path "clckwrks-dot-com-server") serverNames ++ [backups]
-                      , haddock             = True
-                      , revision            = ""
-                      , modifyAtoms = \ atoms ->
-                          map fixRulesHead atoms ++
-                          concatMap
-                            (\ package -> tightDependencyFixup package
-                                             -- For each pair (A, B) make sure that this package requires the
-                                             -- same exact version of package B as the version of A currently
-                                             -- installed during the build.
-                                             [("libghc-clckwrks-theme-clckwrks-dev", "haskell-clckwrks-theme-clckwrks-utils"),
-                                              ("libghc-clckwrks-plugin-media-dev", "haskell-clckwrks-plugin-media-utils"),
-                                              ("libghc-clckwrks-plugin-bugs-dev", "haskell-clckwrks-plugin-bugs-utils"),
-                                              ("libghc-clckwrks-dev", "haskell-clckwrks-utils")])
-                              serverNames
-                      }
-    where
-      serverNames = map BinPkgName ["clckwrks-dot-com-production"] -- , "clckwrks-dot-com-staging", "clckwrks-dot-com-development"]
-      -- Insert a line just above the debhelper.mk include
-      fixRulesHead (DebRulesHead s) = DebRulesHead $ unlines $ concat $
-          map (\ line -> if line == "include /usr/share/cdbs/1/rules/debhelper.mk"
-                         then ["DEB_SETUP_GHC_CONFIGURE_ARGS = -fbackups", "", line]
-                         else [line]) (lines s)
-      fixRulesHead x = x
-
-theSite :: FilePath -> FilePath -> String -> BinPkgName -> Executable
-theSite jstreePath json2Path name (BinPkgName deb) =
-    let this = Executable
-          { debName    = deb
-          , execName   = name
-          , destName   = deb
-          , sourceDir  = Nothing
-          , destDir    = Nothing
-          , execServer =
-              Just (Server
-                    { hostname =
-                          case deb of
-                            "clckwrks-dot-com-production" -> hostname
-                            _ -> hostname
-                    , port = portNum
-                    , site =
-                        case deb of
-                          "clckwrks-dot-com-production" -> Just (Site { domain = hostname, serverAdmin = "logic@seereason.com" })
-                          _                             -> Nothing
-                    , headerMessage = "Generated by clckwrks-dot-com/Setup.hs"
-                    , retry = "60"
-                    , flags = [ "--http-port", show portNum
-                              , "--hide-port"
-                              , "--hostname", hostname
-                              , "--top", databaseDirectory this
-                              , "--enable-analytics"
-                              , "--jquery-path", "/usr/share/javascript/jquery/"
-                              , "--jqueryui-path", "/usr/share/javascript/jquery-ui/"
-                              , "--jstree-path", jstreePath
-                              , "--json2-path",json2Path
-                              ]
-                    }) }
-    in this
+       log <- inputChangeLog "debian"
+       inputCabalization "." defaultAtoms >>= debianization "." . customize jstreePath json2Path log >>= writeDebianization "."
+
+customize :: FilePath -> FilePath -> ChangeLog -> Atoms -> Atoms
+customize jstreePath json2Path log =
+    modL control  (\ y -> y {homepage = Just "http://www.clckwrks.com/"}) .
+    modL control (\ x -> x {standardsVersion = Just (StandardsVersion 3 9 4 Nothing)}) .
+    setL sourceFormat (Just Native3) .
+    modL missingDependencies (insert (BinPkgName "libghc-clckwrks-theme-clckwrks-doc")) .
+    setL revision (Just "") .
+    doWebsite (BinPkgName "clckwrks-dot-com-production") (theSite jstreePath json2Path (BinPkgName "clckwrks-dot-com-production")) .
+    doBackups (BinPkgName "clckwrks-dot-com-backups") "clckwrks-dot-com-backups" .
+    fixRules .
+    tight .
+    setL changelog (Just log) .
+    setL compat (Just 7)
+
+serverNames = List.map BinPkgName ["clckwrks-dot-com-production" {- , "clckwrks-dot-com-staging", "clckwrks-dot-com-development" -}]
+
+-- Insert a line just above the debhelper.mk include
+fixRules deb =
+    modL rulesHead (\ mt -> (Just . f) (fromMaybe (getRulesHead deb) mt)) deb
     where
-      hostname = "clckwrks.com"
-      portNum =
+      f t = T.unlines $ List.concat $
+            List.map (\ line -> if line == "include /usr/share/cdbs/1/rules/debhelper.mk"
+                                then ["DEB_SETUP_GHC_CONFIGURE_ARGS = -fbackups", "", line] :: [T.Text]
+                                else [line] :: [T.Text]) (T.lines t)
+
+tight deb = List.foldr (tightDependencyFixup
+                         -- For each pair (A, B) make sure that this package requires the
+                         -- same exact version of package B as the version of A currently
+                         -- installed during the build.
+                         [(BinPkgName "libghc-clckwrks-theme-clckwrks-dev", BinPkgName "haskell-clckwrks-theme-clckwrks-utils"),
+                          (BinPkgName "libghc-clckwrks-plugin-media-dev", BinPkgName "haskell-clckwrks-plugin-media-utils"),
+                          (BinPkgName "libghc-clckwrks-plugin-bugs-dev", BinPkgName "haskell-clckwrks-plugin-bugs-utils"),
+                          (BinPkgName "libghc-clckwrks-dev", BinPkgName "haskell-clckwrks-utils")]) deb serverNames
+
+theSite :: FilePath -> FilePath -> BinPkgName -> Site
+theSite jstreePath json2Path deb =
+    Site { domain = hostname'
+         , serverAdmin = "logic@seereason.com"
+         , server = theServer jstreePath json2Path deb }
+
+theServer :: FilePath -> FilePath -> BinPkgName -> Server
+theServer jstreePath json2Path deb =
+          Server { hostname =
+                       case deb of
+                         BinPkgName "clckwrks-dot-com-production" -> hostname'
+                         _ -> hostname'
+                 , port = portNum deb
+                 , headerMessage = "Generated by clckwrks-dot-com/Setup.hs"
+                 , retry = "60"
+                 , serverFlags =
+                     [ "--http-port", show (portNum deb)
+                     , "--hide-port"
+                     , "--hostname", hostname'
+                     , "--top", databaseDirectory deb
+                     , "--enable-analytics"
+                     , "--jquery-path", "/usr/share/javascript/jquery/"
+                     , "--jqueryui-path", "/usr/share/javascript/jquery-ui/"
+                     , "--jstree-path", jstreePath
+                     , "--json2-path",json2Path
+                     ]
+                 , installFile =
+                     InstallFile { execName   = "clckwrks-dot-com-server"
+                                 , destName   = show (pretty deb)
+                                 , sourceDir  = Nothing
+                                 , destDir    = Nothing }
+                 }
+
+hostname' = "clckwrks.com"
+
+portNum :: BinPkgName -> Int
+portNum (BinPkgName deb) =
           case deb of
             "clckwrks-dot-com-production"  -> 9029
             "clckwrks-dot-com-staging"     -> 9038
             "clckwrks-dot-com-development" -> 9039
-            _ -> error $ "Unexpected package name: " ++ name
-
-backups =
-    Executable
-    { execName   = "clckwrks-dot-com-backups"
-    , destName   = "clckwrks-dot-com-backups"
-    , debName    = "clckwrks-dot-com-backups"
-    , sourceDir  = Nothing
-    , destDir    = Just "/etc/cron.hourly"
-    , execServer = Nothing }
+            _ -> error $ "Unexpected package name: " ++ deb
