--- old/clckwrks-dot-com.cabal	2013-02-05 09:38:46.000000000 -0800
+++ new/clckwrks-dot-com.cabal	2013-02-05 09:46:18.421903299 -0800
@@ -17,7 +17,7 @@
 
 Flag backups
      Description: enable the backups executable (currently disabled by default do to wacky dependencies not on hackage)
-     Default: False
+     Default: True
 
 Executable             clckwrks-dot-com-server
   main-is:             Main.hs
@@ -28,7 +28,7 @@
                        clckwrks-plugin-bugs     == 0.5.*,
                        clckwrks-plugin-media    == 0.4.*,
                        clckwrks-plugin-page     >= 0.1.1 && < 0.2,
-                       containers               == 0.4.*,
+                       containers               >= 0.4,
                        happstack-server         >= 7.0 && < 7.2,
                        hsp                      == 0.7.*,
                        mtl                      >= 2.0 && < 2.2,
--- old/debian/Debianize.hs	2013-02-08 15:08:22.609455152 -0800
+++ new/debian/Debianize.hs	2013-02-06 18:58:44.705868129 -0800
@@ -2,6 +2,8 @@
 import Data.Lens.Lazy (setL, modL)
 import Data.List as List (map, isPrefixOf, concat, foldr)
 import Data.Maybe (fromMaybe)
+import Data.Map as Map (insertWith)
+import Data.Set as Set (insert, singleton, union)
 import Data.Text as T
 import Debian.Changes (ChangeLog)
 import Debian.Debianize
@@ -13,21 +14,24 @@
 main =
-    do jstreePath <- Clckwrks.getDataFileName "jstree"
-       json2Path  <- Clckwrks.getDataFileName "json2"
+    do let jstreePath = "$CLCKWRKS/jstree"
+           json2Path  = "$CLCKWRKS/json2"
+
        log <- inputChangeLog "debian"
-       getSimplePackageDescription' "." defaultAtoms >>= cabalToDebianization "." . customize jstreePath json2Path log >>= writeDebianization
+       inputCabalization "." defaultAtoms >>= debianization "." . customize jstreePath json2Path log >>= writeDebianization "."
 
 customize :: FilePath -> FilePath -> ChangeLog -> Atoms -> Atoms
 customize jstreePath json2Path log =
-    modControl (\ y -> y {homepage = Just "http://www.clckwrks.com/"}) .
+    modL control  (\ y -> y {homepage = Just "http://www.clckwrks.com/"}) .
+    modL rulesFragments (insert (pack (Prelude.unlines ["build/clckwrks-dot-com-production::", "\techo CLCKWRKS=`ghc-pkg field clckwrks version | sed 's/version: //'` > debian/default"]))) .
+    modL installTo (Map.insertWith Set.union (BinPkgName "clckwrks-dot-com-production") (Set.singleton ("debian/default", "/etc/default/clckwrks-dot-com-production"))) .
+    modL control (\ x -> x {standardsVersion = Just (StandardsVersion 3 9 4 Nothing)}) .
     setL sourceFormat (Just Native3) .
-    missingDependency (BinPkgName "libghc-clckwrks-theme-clckwrks-doc") .
-    setRevision "" .
+    modL missingDependencies (insert (BinPkgName "libghc-clckwrks-theme-clckwrks-doc")) .
+    setL revision (Just "") .
     doWebsite (BinPkgName "clckwrks-dot-com-production") (theSite jstreePath json2Path (BinPkgName "clckwrks-dot-com-production")) .
     doBackups (BinPkgName "clckwrks-dot-com-backups") "clckwrks-dot-com-backups" .
     fixRules .
     tight .
     setL changelog (Just log) .
-    modControl (\ x -> x {standardsVersion = Just (StandardsVersion 3 9 4 Nothing)}) .
     setL compat (Just 7)
 
 serverNames = List.map BinPkgName ["clckwrks-dot-com-production" {- , "clckwrks-dot-com-staging", "clckwrks-dot-com-development" -}]
